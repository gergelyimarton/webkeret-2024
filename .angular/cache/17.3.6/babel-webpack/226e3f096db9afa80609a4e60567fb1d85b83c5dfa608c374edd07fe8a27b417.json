{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthGuard {\n  canActivate(route, state) {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","canActivate","route","state","user","JSON","parse","localStorage","getItem","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/germar/webkeret-2024/src/app/shared/services/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      \n      const user = JSON.parse(localStorage.getItem('user') as string);\n      if (user) {\n        return true;\n      } else {\n        return false;\n      }\n  }\n  \n}\n"],"mappings":";AAOA,OAAM,MAAOA,SAAS;EACpBC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAExB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAW,CAAC;IAC/D,IAAIJ,IAAI,EAAE;MACR,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACJ;EAAC,QAAAK,CAAA,G;qBAXUT,SAAS;EAAA;EAAA,QAAAU,EAAA,G;WAATV,SAAS;IAAAW,OAAA,EAATX,SAAS,CAAAY,IAAA;IAAAC,UAAA,EAFR;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}