{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet MeterReadingComponent = class MeterReadingComponent {\n  constructor(fb, router, userService, readingService, meterService) {\n    this.fb = fb;\n    this.router = router;\n    this.userService = userService;\n    this.readingService = readingService;\n    this.meterService = meterService;\n    this.readingForm = this.createForm({\n      id: '',\n      user_id: '',\n      date: 0,\n      reading: 0,\n      meter: ''\n    });\n  }\n  ngOnInit() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    this.userService.getById(user.uid).subscribe(data => {\n      this.user = data;\n      this.readingForm.get('user_id')?.setValue(this.user?.id);\n    }, error => {\n      console.error(error);\n    });\n  }\n  getMeterName(meter) {\n    this.readingForm.get('meter')?.setValue(meter?.name);\n    this.meter_id = meter?.id;\n  }\n  createForm(model) {\n    let formGroup = this.fb.group(model);\n    formGroup.get('reading')?.addValidators([Validators.required]);\n    formGroup.get('meter')?.addValidators([Validators.required]);\n    return formGroup;\n  }\n  addReading() {\n    if (this.readingForm.valid) {\n      if (this.readingForm.get('reading') && this.readingForm.get('meter')) {\n        this.readingForm.get('date')?.setValue(new Date().getTime());\n        this.meterService.updateCurrent(this.meter_id, this.update_current);\n        this.readingService.create(this.readingForm.value).then(_ => {\n          this.router.navigateByUrl('/main');\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    }\n  }\n};\nMeterReadingComponent = __decorate([Component({\n  selector: 'app-meter-reading',\n  templateUrl: './meter-reading.component.html',\n  styleUrls: ['./meter-reading.component.scss']\n})], MeterReadingComponent);\nexport { MeterReadingComponent };","map":{"version":3,"names":["Component","Validators","MeterReadingComponent","constructor","fb","router","userService","readingService","meterService","readingForm","createForm","id","user_id","date","reading","meter","ngOnInit","user","JSON","parse","localStorage","getItem","getById","uid","subscribe","data","get","setValue","error","console","getMeterName","name","meter_id","model","formGroup","group","addValidators","required","addReading","valid","Date","getTime","updateCurrent","update_current","create","value","then","_","navigateByUrl","catch","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/germar/webkeret-2024/src/app/pages/meter-reading/meter-reading.component.ts"],"sourcesContent":["import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../shared/services/user.service';\nimport { User } from '../../shared/models/User';\nimport { Reading } from '../../shared/models/Reading';\nimport { ReadingService } from '../../shared/services/reading.service';\nimport { Meter } from '../../shared/models/Meter';\nimport { MeterService } from '../../shared/services/meter.service';\n\n@Component({\n  selector: 'app-meter-reading',\n  templateUrl: './meter-reading.component.html',\n  styleUrls: ['./meter-reading.component.scss']\n})\nexport class MeterReadingComponent implements OnInit {\n\n  user?: User;\n  meter_id?: string;\n  update_current?: number;\n\n  readingForm = this.createForm({\n    id: '',\n    user_id: '',\n    date: 0,\n    reading: 0,\n    meter: '',\n  })\n\n\n  constructor(private fb: FormBuilder,\n    private router: Router,\n    private userService: UserService,\n    private readingService: ReadingService,\n    private meterService: MeterService\n    ) { }\n\n  ngOnInit(): void {\n    const user = JSON.parse(localStorage.getItem('user') as string) as firebase.default.User;\n    this.userService.getById(user.uid).subscribe(data => {\n      this.user = data;\n      this.readingForm.get('user_id')?.setValue(this.user?.id);\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  getMeterName(meter?: Meter) {\n    this.readingForm.get('meter')?.setValue(meter?.name);\n    this.meter_id = meter?.id\n  }\n\n  createForm(model: Reading) {\n    let formGroup = this.fb.group(model);\n    formGroup.get('reading')?.addValidators([Validators.required]);\n    formGroup.get('meter')?.addValidators([Validators.required]);\n    return formGroup;\n  }\n\n  addReading() {\n    if (this.readingForm.valid) {\n      if (this.readingForm.get('reading') && this.readingForm.get('meter')) {\n        this.readingForm.get('date')?.setValue(new Date().getTime());\n        \n        this.meterService.updateCurrent(this.meter_id as string, this.update_current as number)\n\n        this.readingService.create(this.readingForm.value).then(_ => {\n          this.router.navigateByUrl('/main');\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    }\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}