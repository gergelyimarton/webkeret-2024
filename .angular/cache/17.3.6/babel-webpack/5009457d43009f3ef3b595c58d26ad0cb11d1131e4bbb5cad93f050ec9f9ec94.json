{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet GasMeterComponent = class GasMeterComponent {\n  constructor(fb, router, userService, meterService) {\n    this.fb = fb;\n    this.router = router;\n    this.userService = userService;\n    this.meterService = meterService;\n    this.meters = [];\n    this.meterForm = this.createForm({\n      id: '',\n      user_id: '',\n      name: '',\n      start: 0,\n      current: 0\n    });\n  }\n  ngOnInit() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    this.userService.getById(user.uid).subscribe(data => {\n      this.user = data;\n      this.meterForm.get('user_id')?.setValue(this.user?.id);\n      this.meterService.getMetersByUserId(this.user?.id).subscribe(meters => {\n        this.meters = meters;\n      }, error => {\n        console.error(error);\n      });\n    }, error => {\n      console.error(error);\n    });\n  }\n  createForm(model) {\n    let formGroup = this.fb.group(model);\n    formGroup.get('name')?.addValidators([Validators.required]);\n    formGroup.get('start')?.addValidators([Validators.required]);\n    return formGroup;\n  }\n  addMeter() {\n    if (this.meterForm.valid) {\n      if (this.meterForm.get('name') && this.meterForm.get('start')) {\n        const values = this.meterForm.getRawValue();\n        this.meterForm.get('current')?.setValue(values.start);\n        this.meterService.create(this.meterForm.value).then(_ => {\n          this.router.navigateByUrl('/main');\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    }\n  }\n};\nGasMeterComponent = __decorate([Component({\n  selector: 'app-gas-meter',\n  templateUrl: './gas-meter.component.html',\n  styleUrls: ['./gas-meter.component.scss']\n})], GasMeterComponent);\nexport { GasMeterComponent };","map":{"version":3,"names":["Component","Validators","GasMeterComponent","constructor","fb","router","userService","meterService","meters","meterForm","createForm","id","user_id","name","start","current","ngOnInit","user","JSON","parse","localStorage","getItem","getById","uid","subscribe","data","get","setValue","getMetersByUserId","error","console","model","formGroup","group","addValidators","required","addMeter","valid","values","getRawValue","create","value","then","_","navigateByUrl","catch","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/germar/webkeret-2024/src/app/pages/gas-meter/gas-meter.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../../shared/models/User';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../shared/services/user.service';\nimport { MeterService } from '../../shared/services/meter.service';\nimport { Meter } from '../../shared/models/Meter';\n\n@Component({\n  selector: 'app-gas-meter',\n  templateUrl: './gas-meter.component.html',\n  styleUrls: ['./gas-meter.component.scss']\n})\nexport class GasMeterComponent implements OnInit {\n\n  user?: User;\n  meters: Array<Meter> = [];\n  meterForm = this.createForm({\n    id:'',\n    user_id: '',\n    name: '',\n    start: 0,\n    current: 0,\n  });\n  \n\n  constructor(private fb: FormBuilder,\n    private router: Router,\n    private userService: UserService,\n    private meterService: MeterService) { }\n\n  ngOnInit(): void {\n    const user = JSON.parse(localStorage.getItem('user') as string) as firebase.default.User;\n    this.userService.getById(user.uid).subscribe(data => {\n      this.user = data;\n      this.meterForm.get('user_id')?.setValue(this.user?.id);\n      this.meterService.getMetersByUserId(this.user?.id as string).subscribe(meters => {\n        this.meters = meters;\n      }, error => {\n        console.error(error);\n      });\n    }, error => {\n    console.error(error);\n    });\n  }\n\n  createForm(model: Meter) {\n    let formGroup = this.fb.group(model);\n    formGroup.get('name')?.addValidators([Validators.required]);\n    formGroup.get('start')?.addValidators([Validators.required]);\n    return formGroup;\n  }\n\n  addMeter() {\n    if (this.meterForm.valid) {\n      if (this.meterForm.get('name') && this.meterForm.get('start')) {\n          const values = this.meterForm.getRawValue();\n          this.meterForm.get('current')?.setValue(values.start);\n          this.meterService.create(this.meterForm.value).then(_ => {\n          this.router.navigateByUrl('/main');\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    }\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}