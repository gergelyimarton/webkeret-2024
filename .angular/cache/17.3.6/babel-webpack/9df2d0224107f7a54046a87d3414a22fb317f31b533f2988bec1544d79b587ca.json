{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../shared/services/user.service\";\nimport * as i4 from \"../../shared/services/meter.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nconst _c0 = a0 => ({\n  \"background-color\": a0\n});\nfunction WaterMeterComponent_div_21_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 12)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const meter_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, i_r2 % 2 === 0 ? \"gray\" : \"darkgray\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(meter_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(meter_r1.start);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(meter_r1.current);\n  }\n}\nfunction WaterMeterComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"table\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"N\\u00E9v\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Kezdeti \\u00F3ra\\u00E1ll\\u00E1s\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Jelenlegi \\u00F3ra\\u00E1ll\\u00E1s\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, WaterMeterComponent_div_21_tr_9_Template, 7, 6, \"tr\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.meters);\n  }\n}\nexport let WaterMeterComponent = /*#__PURE__*/(() => {\n  class WaterMeterComponent {\n    constructor(fb, router, userService, meterService) {\n      this.fb = fb;\n      this.router = router;\n      this.userService = userService;\n      this.meterService = meterService;\n      this.meters = [];\n      this.meterForm = this.createForm({\n        id: '',\n        user_id: '',\n        name: '',\n        start: 0,\n        current: 0\n      });\n    }\n    ngOnInit() {\n      const user = JSON.parse(localStorage.getItem('user'));\n      this.userService.getById(user.uid).subscribe(data => {\n        this.user = data;\n        this.meterForm.get('user_id')?.setValue(this.user?.id);\n        this.meterService.getMetersByUserId(this.user?.id).subscribe(meters => {\n          this.meters = meters;\n        }, error => {\n          console.error(error);\n        });\n      }, error => {\n        console.error(error);\n      });\n    }\n    createForm(model) {\n      let formGroup = this.fb.group(model);\n      formGroup.get('name')?.addValidators([Validators.required]);\n      formGroup.get('start')?.addValidators([Validators.required]);\n      return formGroup;\n    }\n    addMeter() {\n      if (this.meterForm.valid) {\n        if (this.meterForm.get('name') && this.meterForm.get('start')) {\n          const values = this.meterForm.getRawValue();\n          this.meterForm.get('current')?.setValue(values.start);\n          this.meterService.create(this.meterForm.value).then(_ => {\n            this.router.navigateByUrl('/main');\n          }).catch(error => {\n            console.error(error);\n          });\n        }\n      }\n    }\n    static #_ = this.ɵfac = function WaterMeterComponent_Factory(t) {\n      return new (t || WaterMeterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.MeterService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: WaterMeterComponent,\n      selectors: [[\"app-water-meter\"]],\n      decls: 22,\n      vars: 2,\n      consts: [[\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", 1, \"main_component\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"20px\", \"fxLayoutAlign\", \"center center\"], [1, \"div-flex\"], [3, \"ngSubmit\", \"formGroup\"], [\"for\", \"name\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"name\"], [\"for\", \"start\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"start\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"type\", \"submit\"], [\"class\", \"table\", 4, \"ngIf\"], [1, \"table\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngStyle\"]],\n      template: function WaterMeterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"mat-card-title\");\n          i0.ɵɵtext(4, \" \\u00DAj v\\u00EDz\\u00F3ra hozz\\u00E1ad\\u00E1sa \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(5, \"mat-card-content\");\n          i0.ɵɵelementStart(6, \"mat-card-actions\", 2)(7, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function WaterMeterComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.addMeter();\n          });\n          i0.ɵɵelementStart(8, \"div\")(9, \"mat-form-field\")(10, \"mat-label\", 4);\n          i0.ɵɵtext(11, \"N\\u00E9v: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\")(14, \"mat-form-field\")(15, \"mat-label\", 6);\n          i0.ɵɵtext(16, \"\\u00D3ra\\u00E1ll\\u00E1s: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"div\")(19, \"button\", 8);\n          i0.ɵɵtext(20, \"L\\u00E9trehoz\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(21, WaterMeterComponent_div_21_Template, 10, 1, \"div\", 9);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.meterForm);\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngIf\", ctx.meters.length);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i5.NgStyle, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.MatFormField, i6.MatLabel, i7.MatCard, i7.MatCardActions, i7.MatCardContent, i7.MatCardHeader, i7.MatCardTitle, i8.MatInput, i9.MatButton],\n      styles: [\".div-card[_ngcontent-%COMP%]{padding:50px}.main_component[_ngcontent-%COMP%]{height:100vh;align-items:center}mat-card[_ngcontent-%COMP%]{width:80%}mat-card-header[_ngcontent-%COMP%]{display:initial}mat-card-actions[_ngcontent-%COMP%]{width:80%}mat-form-field[_ngcontent-%COMP%]{width:80%}.div-flex[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;text-align:center}.table[_ngcontent-%COMP%]{margin-top:15px}table[_ngcontent-%COMP%]{border-collapse:collapse;table-layout:auto;text-align:center}th[_ngcontent-%COMP%], tr[_ngcontent-%COMP%]{padding:8px}\"]\n    });\n  }\n  return WaterMeterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}