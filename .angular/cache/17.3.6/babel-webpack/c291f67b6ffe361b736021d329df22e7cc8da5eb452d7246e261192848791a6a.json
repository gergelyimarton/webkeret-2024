{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs';\nlet AppComponent = class AppComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n    this.title = 'webkeret-projekt';\n    this.page = '';\n    this.routes = [];\n  }\n  ngOnInit() {\n    this.routes = this.router.config.map(conf => conf.path);\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(evts => {\n      const currentPage = evts.urlAfterRedirects.split('/')[1];\n      if (this.routes.includes(currentPage)) {\n        this.page = currentPage;\n      }\n    });\n    this.authService.isUserLoggedIn().subscribe(user => {\n      this.loggedInUser = user;\n      localStorage.setItem('user', JSON.stringify(this.loggedInUser));\n    }, error => {\n      console.error(error);\n      localStorage.setItem('user', JSON.stringify('null'));\n    });\n  }\n  changePage(selectedPage) {\n    this.router.navigateByUrl(selectedPage);\n  }\n  onToggleSidenav(sidenav) {\n    sidenav.toggle();\n  }\n  onClose(event, sidenav) {\n    if (event === true) {\n      sidenav.close();\n    }\n  }\n  logout(event) {\n    this.authService.logout().then(() => {\n      this.router.navigateByUrl('/login');\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","NavigationEnd","filter","AppComponent","constructor","router","authService","title","page","routes","ngOnInit","config","map","conf","path","events","pipe","event","subscribe","evts","currentPage","urlAfterRedirects","split","includes","isUserLoggedIn","user","loggedInUser","localStorage","setItem","JSON","stringify","error","console","changePage","selectedPage","navigateByUrl","onToggleSidenav","sidenav","toggle","onClose","close","logout","then","catch","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/germar/webkeret-2024/src/app/app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs';\nimport { AuthService } from './shared/services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'webkeret-projekt';\n  page = '';\n  loggedInUser?: firebase.default.User | null;\n  routes: Array<string> = [];\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.routes = this.router.config.map(conf => conf.path) as string[];\n\n   this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((evts: any) => {\n    const currentPage = (evts.urlAfterRedirects as string).split('/')[1] as string;\n    if (this.routes.includes(currentPage)) {\n      this.page = currentPage;\n    }\n   });\n\n   this.authService.isUserLoggedIn().subscribe(user => {\n    this.loggedInUser = user;\n    localStorage.setItem('user', JSON.stringify(this.loggedInUser));\n   }, error => {\n    console.error(error);\n    localStorage.setItem('user', JSON.stringify('null'));\n   });\n  }\n\n  changePage(selectedPage: string) {\n    this.router.navigateByUrl(selectedPage);\n  }\n\n  onToggleSidenav(sidenav: MatSidenav){\n    sidenav.toggle();\n  }\n\n  onClose(event: any, sidenav: MatSidenav){\n      if (event === true) {\n        sidenav.close();\n      }\n  }\n\n  logout( event?: any) {\n    this.authService.logout().then(() => {\n      this.router.navigateByUrl('/login');\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n}\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,aAAa,QAAgB,iBAAiB;AACvD,SAASC,MAAM,QAAQ,MAAM;AAQtB,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAMvBC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IALvD,KAAAC,KAAK,GAAG,kBAAkB;IAC1B,KAAAC,IAAI,GAAG,EAAE;IAET,KAAAC,MAAM,GAAkB,EAAE;EAE8C;EAExEC,QAAQA,CAAA;IACN,IAAI,CAACD,MAAM,GAAG,IAAI,CAACJ,MAAM,CAACM,MAAM,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAa;IAEpE,IAAI,CAACT,MAAM,CAACU,MAAM,CAACC,IAAI,CAACd,MAAM,CAACe,KAAK,IAAIA,KAAK,YAAYhB,aAAa,CAAC,CAAC,CAACiB,SAAS,CAAEC,IAAS,IAAI;MAChG,MAAMC,WAAW,GAAID,IAAI,CAACE,iBAA4B,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAW;MAC9E,IAAI,IAAI,CAACb,MAAM,CAACc,QAAQ,CAACH,WAAW,CAAC,EAAE;QACrC,IAAI,CAACZ,IAAI,GAAGY,WAAW;MACzB;IACD,CAAC,CAAC;IAEF,IAAI,CAACd,WAAW,CAACkB,cAAc,EAAE,CAACN,SAAS,CAACO,IAAI,IAAG;MAClD,IAAI,CAACC,YAAY,GAAGD,IAAI;MACxBE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,YAAY,CAAC,CAAC;IAChE,CAAC,EAAEK,KAAK,IAAG;MACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBJ,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC,MAAM,CAAC,CAAC;IACrD,CAAC,CAAC;EACH;EAEAG,UAAUA,CAACC,YAAoB;IAC7B,IAAI,CAAC7B,MAAM,CAAC8B,aAAa,CAACD,YAAY,CAAC;EACzC;EAEAE,eAAeA,CAACC,OAAmB;IACjCA,OAAO,CAACC,MAAM,EAAE;EAClB;EAEAC,OAAOA,CAACtB,KAAU,EAAEoB,OAAmB;IACnC,IAAIpB,KAAK,KAAK,IAAI,EAAE;MAClBoB,OAAO,CAACG,KAAK,EAAE;IACjB;EACJ;EAEAC,MAAMA,CAAExB,KAAW;IACjB,IAAI,CAACX,WAAW,CAACmC,MAAM,EAAE,CAACC,IAAI,CAAC,MAAK;MAClC,IAAI,CAACrC,MAAM,CAAC8B,aAAa,CAAC,QAAQ,CAAC;IACrC,CAAC,CAAC,CAACQ,KAAK,CAACZ,KAAK,IAAG;MACfC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ;CACD;AAhDY5B,YAAY,GAAAyC,UAAA,EALxB5C,SAAS,CAAC;EACT6C,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACW5C,YAAY,CAgDxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}